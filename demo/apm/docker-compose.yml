version: "3.4"
services:  
  # Host Agent : Metrics (hostreceivermetrics) + Traces (forwarded via OTLP) + Logs (filelogreceiver)
  melt-agent-host-go:
    # image: ghcr.io/middleware-labs/agent-host-go:dev
    build:
      context: ../../
      dockerfile: Dockerfile
      target: local
    command: api-server start
    restart: always
    pid: host
    volumes:
      - ../../:/app
    environment:
      TARGET: http://localhost:4317 
      MELT_API_KEY: ox83a2gqhp5d8jm03op38c6byy79xrc4ffmx
    network_mode: host

  mysql:
    image: mysql:5.7
    environment:
      MYSQL_DATABASE: 'todo'
      MYSQL_ALLOW_EMPTY_PASSWORD: "true"
    ports:
      - "3306:3306"
    command: --init-file /docker-entrypoint-initdb.d/init.sql
    volumes:
      - ./data/conf.d:/etc/mysql/conf.d
      - ./data/logs:/logs
      - /usr/local/var/mysql:/var/lib/mysql
      - ./node-apm-demo/todo.sql:/docker-entrypoint-initdb.d/init.sql

  # APM Metrics
  node-apm-demo:
    build:
      args:
        NPM_TOKEN: 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
      context: ./node-apm-demo
      dockerfile: Dockerfile
    command: node server.js
    environment:
      OTEL_EXPORTER_OTLP_ENDPOINT: http://localhost:4320    # sends data to host agent
      # MELT_APM_PAUSE_METRICS: "true"                      # if you want to PAUSE metrics data
      MELT_APM_PAUSE_TRACES: "true"                         # if you want to PAUSE traces data
    network_mode: host

  # APM Traces + Logs
  node-apm-demo-nopkg:
    build:
      context: ./node-apm-demo-nopkg
      dockerfile: Dockerfile
    command: node server.js
    environment:
      OTEL_EXPORTER_OTLP_ENDPOINT: http://localhost:4320    # sends data to host agent
    network_mode: host   

  # test-logs:
  #   build:
  #     context: ./test-logs-node-fluent
  #     dockerfile: Dockerfile
  #   command: node fluent.js
  #   environment:
  #     OTEL_EXPORTER_OTLP_ENDPOINT: http://localhost:4320    # sends data to host agent
  #     # OTEL_EXPORTER_OTLP_ENDPOINT: http://localhost:4317  # sends data to capture directly
  #   network_mode: host

  # test-traces-python:
  #   # image: ghcr.io/middleware-labs/agent-python-apm:dev
  #   build: 
  #     context: ./test-traces-python
  #     dockerfile: Dockerfile
  #   ports:
  #   - 9099:9099
  #   environment:
  #     OTEL_EXPORTER_OTLP_ENDPOINT: http://localhost:4320    # sends data to host agent
  #     # OTEL_EXPORTER_OTLP_ENDPOINT: http://localhost:4317  # sends data to capture directly
  #   command: opentelemetry-instrument python3 -m flask run
  #   network_mode: host


#local command: TARGET=http://localhost:4317 MELT_API_KEY=ox83a2gqhp5d8jm03op38c6byy79xrc4ffmx api-server start