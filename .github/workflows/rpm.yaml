name: Build And Push RPM for systems like RedHat / CentOS

on:
  push:
    paths-ignore:
      - 'README.md'
      - '.github/**'
      - 'configyamls/**'
    branches:
    #  - 'master'
     - 'workflow-experiments'

env:
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true
  
# env:
#   ARCH: arm64
#   BINARY_SOURCE: release/mw-go-agent-host-aws-arm
#   BINARY_NAME: mw-go-agent-host-aws-arm
#   RELEASE_VERSION: 0.0.15-aws-arm64

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        arch:
          - ARM
          - x64

    steps:
    - uses: actions/checkout@v2

    - name: Set architecture variables
      run: |
        if [ ${{ matrix.arch }} == "x64" ]; then
          echo "::set-env name=ARCH::all"
          echo "::set-env name=BINARY_SOURCE::release/mw-go-agent-host-aws"
          echo "::set-env name=RELEASE_VERSION::0.0.16-rpm-amd64"
          echo "::set-env name=BINARY_NAME::mw-go-agent-host-aws"
        elif [ ${{ matrix.arch }} == "ARM" ]; then
          echo "::set-env name=ARCH::arm64"
          echo "::set-env name=BINARY_SOURCE::release/mw-go-agent-host-aws-arm"
          echo "::set-env name=RELEASE_VERSION::0.0.16-rpm-arm64"
          echo "::set-env name=BINARY_NAME::mw-go-agent-host-aws-arm"
        else
          echo "Unsupported architecture"
          exit 1
        fi

    - uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}

    - name: Creating Required Folder Structure
      run: |
        mkdir -p ~/rpmbuild/BUILD
        mkdir -p ~/rpmbuild/BUILDROOT
        mkdir -p ~/rpmbuild/RPMS
        mkdir -p ~/rpmbuild/SOURCES
        mkdir -p ~/rpmbuild/SPECS
        mkdir -p ~/rpmbuild/SRPMS
        mkdir -p ~/rpmbuild/SOURCES/$BINARY_SOURCE-0.0.1
        echo '%_topdir %(echo $HOME)/rpmbuild' > ~/.rpmmacros
        touch ~/rpmbuild/SPECS/test.spec
        cp installables/rpmessentials/test.spec ~/rpmbuild/SPECS/test.spec

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.18

    - name: Go Build
      run: |
        if [ ${{ matrix.arch }} == "x64" ]; then
          go build -v -o ~/rpmbuild/SOURCES/mw-go-agent-host-aws-0.0.1/mw-go-agent-host-aws
        elif [ ${{ matrix.arch }} == "ARM" ]; then
          GOOS=linux GOARCH=$ARCH  go build -v -a -o ~/rpmbuild/SOURCES/$BINARY_SOURCE-0.0.1/$BINARY_SOURCE
        else
          echo "Unsupported architecture"
          exit 1
        fi

        cd ~/rpmbuild/SOURCES
        tar -czvf $BINARY_SOURCE_0.0.1-1_all.tar.gz $BINARY_SOURCE-0.0.1/
        ls -l ~/rpmbuild/SOURCES/

    - name: Create RPM package
      run: |
        rpmbuild -ba ~/rpmbuild/SPECS/test.spec

    - name: Acquire lock
      run: flock upload.lock -c "echo Lock acquired"

    - name: Upload artifacts to Github Pages (install.middleware.io)
      run: |

        git clone https://.:${{ secrets.GHCR_TOKEN }}@github.com/middleware-labs/install.middleware.io.git
        mkdir -p install.middleware.io/rpms
        cp -r ~/rpmbuild/RPMS/x86_64/$BINARY_SOURCE-0.0.1-1.x86_64.rpm install.middleware.io/rpms/
        cd install.middleware.io
        git config --global user.email "keval@middleware.io"
        git config --global user.name "bhogayatakb"
        git add .
        git commit -m "RPM added to install.middleware.io"
        git push origin master
    
    - name: Release lock
      run: flock upload.lock -c "echo Lock released"
    - name: Delay
      run: sleep 10
